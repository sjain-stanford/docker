# This file must be used with "source bin/activate" *from bash*
# You cannot run it directly

# Check if already activated to avoid double patching
if [ -n "${VIRTUAL_ENV:-}" ] && [ "${VIRTUAL_ENV}" = "${PWD}/.cache/docker/venv" ]; then
    # Already activated: skip overriding env variables and early return
    # `return 0` tries to return from the script â€” this only works if the script is being sourced.
    # `2>/dev/null` suppresses errors in case return is invalid (e.g., script is run, not sourced).
    # If return fails, it falls back to `exit 0` to exit the script gracefully.
    return 0 2>/dev/null || exit 0
fi

deactivate () {
    # reset old environment variables
    if [ -n "${_OLD_VIRTUAL_PATH:-}" ] ; then
        PATH="${_OLD_VIRTUAL_PATH:-}"
        export PATH
        unset _OLD_VIRTUAL_PATH
    fi
    if [ -n "${_OLD_VIRTUAL_PYTHONHOME:-}" ] ; then
        PYTHONHOME="${_OLD_VIRTUAL_PYTHONHOME:-}"
        export PYTHONHOME
        unset _OLD_VIRTUAL_PYTHONHOME
    fi
    if [ -n "${_OLD_VIRTUAL_LD_LIBRARY_PATH:-}" ] ; then
        LD_LIBRARY_PATH="${_OLD_VIRTUAL_LD_LIBRARY_PATH:-}"
        export LD_LIBRARY_PATH
        unset _OLD_VIRTUAL_LD_LIBRARY_PATH
    else
        unset LD_LIBRARY_PATH
    fi
    if [ -n "${_OLD_VIRTUAL_PS1:-}" ] ; then
        PS1="${_OLD_VIRTUAL_PS1:-}"
        export PS1
        unset _OLD_VIRTUAL_PS1
    fi

    # Call hash to forget past commands. Without forgetting
    # past commands the $PATH changes we made may not be respected
    hash -r 2> /dev/null

    unset DOCKER_CACHE_DIR
    unset THEROCK_DIR
    unset VIRTUAL_ENV
    unset VIRTUAL_ENV_PROMPT
    if [ ! "${1:-}" = "nondestructive" ] ; then
    # Self destruct!
        unset -f deactivate
    fi
}

# unset irrelevant variables
deactivate nondestructive

# CAUTION: These directories need to be kept in sync with the `entrypoint.sh` script!!
export DOCKER_CACHE_DIR=${PWD}/.cache/docker
export THEROCK_DIR=${DOCKER_CACHE_DIR}/therock
export VIRTUAL_ENV=${DOCKER_CACHE_DIR}/venv

# save old PATH and re-export
_OLD_VIRTUAL_PATH="${PATH}"
PATH="${VIRTUAL_ENV}/bin:${THEROCK_DIR}/bin:${PATH}"
export PATH

# save old LD_LIBRARY_PATH and re-export
if [ -n "${LD_LIBRARY_PATH:-}" ] ; then
    _OLD_VIRTUAL_LD_LIBRARY_PATH="${LD_LIBRARY_PATH:-}"
    LD_LIBRARY_PATH="${THEROCK_DIR}/lib:${LD_LIBRARY_PATH:-}"
else
    LD_LIBRARY_PATH="${THEROCK_DIR}/lib"
fi
export LD_LIBRARY_PATH

# unset PYTHONHOME if set
# this will fail if PYTHONHOME is set to the empty string (which is bad anyway)
# could use `if (set -u; : $PYTHONHOME) ;` in bash
if [ -n "${PYTHONHOME:-}" ] ; then
    _OLD_VIRTUAL_PYTHONHOME="${PYTHONHOME:-}"
    unset PYTHONHOME
fi

if [ -z "${VIRTUAL_ENV_DISABLE_PROMPT:-}" ] ; then
    _OLD_VIRTUAL_PS1="${PS1:-}"
    PS1='(venv) '"${PS1:-}"
    export PS1
    VIRTUAL_ENV_PROMPT='(venv) '
    export VIRTUAL_ENV_PROMPT
fi

# Call hash to forget past commands. Without forgetting
# past commands the $PATH changes we made may not be respected
hash -r 2> /dev/null
